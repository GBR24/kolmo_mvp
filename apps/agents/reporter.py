from __future__ import annotations
import pandas as pd
from typing import Any, Dict, List
from .types import AgentResult
from .blackboard import Blackboard

def _md_table(df: pd.DataFrame, n: int = 10) -> str:
    if df is None or df.empty:
        return "_No data._"
    return df.head(n).to_markdown(index=False)

def run(args: Dict[str, Any], tools: Dict[str, Any], bb: Blackboard) -> AgentResult:
    try:
        hist = bb.get("history")
        fc = bb.get("forecast")
        news = bb.get("news", [])
        risk = bb.get("risk", {})

        blocks: List[str] = []
        blocks.append("# Kolmo Report\n")
        if hist is not None:
            blocks.append("## Recent Prices\n" + _md_table(hist))
        if fc:
            preds = fc.get("preds", [])
            if preds:
                first = preds[0]["target_dt"]; last = preds[-1]["target_dt"]
                blocks.append(f"## Forecast ({first} → {last})\n")
                blocks.append("| target_dt | yhat |\n|---|---|")
                for p in preds:
                    blocks.append(f"| {p['target_dt']} | {p['yhat']} |")
        if news:
            blocks.append("## News (last days)\n")
            for it in news[:8]:
                blocks.append(f"- **{it['title']}** — _{it['source']}_ ({it['published_at']})  \n  {it.get('driver','')}  \n  {it.get('link','')}")
        if risk:
            blocks.append("## Risk Snapshot\n")
            blocks.append(f"- VaR (95%): `{risk.get('var'):.2f}`\n- Assumptions: `{risk.get('assumptions')}`")

        # Audit footer
        blocks.append("\n---\n_This output was generated by multi-agent flow (Supervisor → DR/FC/News/Risk → Reporter)._")

        out = tools["render_report"](blocks)
        return AgentResult(ok=True, payload=out, confidence=0.9)
    except Exception as e:
        return AgentResult(ok=False, error=str(e), confidence=0.2)
